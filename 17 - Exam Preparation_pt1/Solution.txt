# CREATE DATABASE restaurant;
# use restaurant;
# DROP DATABASE restaurant;

# Section 1: Data Definition Language (DDL) – 40 pts
-- 1

CREATE TABLE products
(
    id    INT PRIMARY KEY AUTO_INCREMENT,
    name  VARCHAR(30)    NOT NULL UNIQUE,
    type  VARCHAR(30)    NOT NULL,
    price DECIMAL(10, 2) NOT NULL

);

CREATE TABLE clients
(
    id         INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name  VARCHAR(50) NOT NULL,
    birthdate  DATE,
    card       VARCHAR(50),
    review     TEXT
);

CREATE TABLE tables
(
    id       INT PRIMARY KEY AUTO_INCREMENT,
    floor    INT NOT NULL,
    reserved TINYINT(1),
    capacity INT NOT NULL
);

CREATE TABLE waiters
(
    id         INT PRIMARY KEY AUTO_INCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name  VARCHAR(50) NOT NULL,
    email      VARCHAR(50) NOT NULL,
    phone      VARCHAR(50),
    salary     DECIMAL(10, 2)

);

CREATE TABLE orders
(
    id           INT PRIMARY KEY AUTO_INCREMENT,
    table_id     INT  NOT NULL,
    waiter_id    INT  NOT NULL,
    order_time   TIME NOT NULL,
    payed_status TINYINT(1),

    CONSTRAINT fk_orders_tables
        FOREIGN KEY (table_id)
            REFERENCES tables (id),

    CONSTRAINT fk_orders_waiters
        FOREIGN KEY (waiter_id)
            REFERENCES waiters (id)
);

CREATE TABLE orders_clients
(
    order_id  INT,
    client_id INT,
    CONSTRAINT fk_oc_orders
        FOREIGN KEY (order_id)
            REFERENCES orders (id),

    CONSTRAINT fk_oc_clients
        FOREIGN KEY (client_id)
            REFERENCES clients (id)
);

CREATE TABLE orders_products
(
    order_id   INT,
    product_id INT,

    CONSTRAINT fk_op_orders
        FOREIGN KEY (order_id)
            REFERENCES orders (id),

    CONSTRAINT fk_op_products
        FOREIGN KEY (product_id)
            REFERENCES products (id)
);

# Section 2: Data Manipulation Language (DML) – 30 pts
-- 2
# INSERT
INSERT INTO products(name, type, price)
    (SELECT CONCAT(last_name, ' ', 'specialty'),
            'Cocktail',
            CEILING(0.01 * salary)
     FROM waiters
     WHERE ID > 6);

select *
from products
where id > 199;

-- 3
# UPDATE

UPDATE orders
SET table_id = table_id - 1
WHERE id BETWEEN 12 AND 23;

-- 4
# DELETE

SELECT w.id,
       (SELECT COUNT(*) FROM orders WHERE waiter_id = w.id) as ocount
FROM waiters as w
HAVING ocount = 0;

DELETE
FROM waiters as w
WHERE (SELECT COUNT(*) FROM orders WHERE waiter_id = w.id) = 0;


# Section 3: Querying – 50 pts

-- 5

SELECT id,
       first_name,
       last_name,
       birthdate,
       card,
       review
FROM clients
ORDER BY birthdate DESC, id DESC;

-- 6

SELECT first_name,
       last_name,
       birthdate,
       review
FROM clients
WHERE card IS NULL
  AND YEAR(birthdate) BETWEEN 1978 AND 1993
ORDER BY last_name DESC, id ASC
LIMIT 5;

-- 7

SELECT CONCAT(last_name, first_name, CHAR_LENGTH(first_name), 'Restaurant') as username,
       REVERSE(SUBSTRING(email, 2, 12))                                     as password
FROM waiters
WHERE salary IS NOT NULL
ORDER BY password DESC;

-- 8

select id, `name`, count(op.order_id) as `count`
from products as p
JOIN orders_products as op on op.product_id = p.id
GROUP BY p.id
HAVING `count` >= 5
ORDER BY `count` DESC, `name`;

-- 9

SELECT  t.id, capacity,
        floor,
        COUNT(oc.client_id) as count_clients,
FROM tables as t
JOIN orders as o on o.table_id = t.id
JOIN orders_clients AS oc on oc.order_id = o.id
WHERE floor = 1
GROUP BY t.id
ORDER BY t.id desc;